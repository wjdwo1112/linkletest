<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ggamakun.linkle.domain.schedule.repository.IScheduleRepository">

	<!-- 일정 생성 -->
    <insert id="insertSchedule" parameterType="com.ggamakun.linkle.domain.schedule.entity.Schedule" useGeneratedKeys="true" keyProperty="scheduleId" keyColumn="SCHEDULE_ID">
        INSERT INTO SCHEDULE (
            SCHEDULE_ID,
            CLUB_ID,
            TITLE,
            CONTENT,
            ADDRESS,
            ADDRESS_DETAIL,
            LATITUDE,
            LONGITUDE,
            SCHEDULE_START_DATE,
            SCHEDULE_END_DATE,
            MAX_ATTENDEES,
            CREATED_BY,
            CREATED_AT,
            IS_CANCELED,
            IS_DELETED
        ) VALUES (
            SEQ_SCHEDULE.NEXTVAL,
            #{clubId},
            #{title},
            #{content},
            #{address},
            #{addressDetail},
            #{latitude},
            #{longitude},
            #{scheduleStartDate},
            #{scheduleEndDate},
            #{maxAttendees},
            #{createdBy},
            SYSDATE,
            'N',
            'N'
        )
    </insert>
    
    <!-- 일정 취소 -->
    <update id="cancelSchedule">
        UPDATE SCHEDULE
        SET IS_CANCELED = 'Y',
            CANCELED_AT = SYSDATE,
            CANCELED_BY = #{canceledBy},
            UPDATED_AT = SYSDATE
        WHERE SCHEDULE_ID = #{scheduleId}
        AND IS_DELETED = 'N'
    </update>
    
    <!-- 일정 상세 조회 -->
    <select id="findById" parameterType="int" resultType="com.ggamakun.linkle.domain.schedule.dto.ScheduleDetail">
        SELECT
            SCHEDULE_ID AS scheduleId,
            CLUB_ID AS clubId,
            TITLE AS title,
            CONTENT AS content,
            ADDRESS AS address,
            ADDRESS_DETAIL AS addressDetail,
            LATITUDE AS latitude,
            LONGITUDE AS longitude,
            SCHEDULE_START_DATE AS scheduleStartDate,
            SCHEDULE_END_DATE AS scheduleEndDate,
            MAX_ATTENDEES AS maxAttendees,
            CREATED_BY AS createdBy,
            CREATED_AT AS createdAt,
            IS_CANCELED AS isCanceled,
            CANCELED_AT AS canceledAt,
            CANCELED_BY AS canceledBy
        FROM SCHEDULE
        WHERE SCHEDULE_ID = #{scheduleId}
        AND IS_DELETED = 'N'
        AND IS_CANCELED = 'N'
    </select>

    <!-- 동호회별 일정 목록 조회 -->
    <select id="findByClubId" parameterType="int" resultType="com.ggamakun.linkle.domain.schedule.dto.ScheduleSummary">
        SELECT
            s.SCHEDULE_ID AS scheduleId,
            s.CLUB_ID AS clubId,
            s.TITLE AS title,
            s.ADDRESS AS address,
            s.SCHEDULE_START_DATE AS scheduleStartDate,
            s.SCHEDULE_END_DATE AS scheduleEndDate,
            s.MAX_ATTENDEES AS maxAttendees,
            s.IS_CANCELED AS isCanceled,
            (SELECT COUNT(*)
             FROM SCHEDULE_ATTENDANCE sa
             WHERE sa.SCHEDULE_ID = s.SCHEDULE_ID
             AND sa.ATTENDANCE_STATUS = 'ATTEND'
             AND sa.IS_DELETED = 'N') AS attendeeCount
        FROM SCHEDULE s
        WHERE s.CLUB_ID = #{clubId}
        AND s.IS_DELETED = 'N'
        AND s.IS_CANCELED = 'N'
        ORDER BY s.SCHEDULE_START_DATE DESC
    </select>

    <!-- 일정 참석자 목록 조회 -->
    <select id="findAttendeesByScheduleId" parameterType="int" resultType="com.ggamakun.linkle.domain.schedule.dto.AttendeeInfo">
        SELECT
            m.MEMBER_ID AS memberId,
            m.NICKNAME AS nickname,
            f.FILE_LINK AS profileImageUrl,
            sa.ATTENDANCE_STATUS AS attendanceStatus,
            sa.RESPONDED_AT AS respondedAt
        FROM SCHEDULE_ATTENDANCE sa
        INNER JOIN MEMBER m ON sa.MEMBER_ID = m.MEMBER_ID
        LEFT JOIN FILE_STORAGE f ON m.FILE_ID = f.FILE_ID
        WHERE sa.SCHEDULE_ID = #{scheduleId}
        AND sa.IS_DELETED = 'N'
        ORDER BY sa.RESPONDED_AT DESC
    </select>
    
    <!-- 참석 상태 등록 -->
    <insert id="insertAttendance" parameterType="com.ggamakun.linkle.domain.schedule.entity.ScheduleAttendance">
        INSERT INTO SCHEDULE_ATTENDANCE (
            SCHEDULE_ID,
            MEMBER_ID,
            ATTENDANCE_STATUS,
            RESPONDED_AT,
            CREATED_BY,
            CREATED_AT,
            IS_DELETED
        ) VALUES (
            #{scheduleId},
            #{memberId},
            #{attendanceStatus},
            SYSDATE,
            #{createdBy},
            SYSDATE,
            'N'
        )
    </insert>

    <!-- 참석 상태 수정 -->
    <update id="updateAttendance" parameterType="com.ggamakun.linkle.domain.schedule.entity.ScheduleAttendance">
        UPDATE SCHEDULE_ATTENDANCE
        SET ATTENDANCE_STATUS = #{attendanceStatus},
            RESPONDED_AT = SYSDATE,
            UPDATED_BY = #{updatedBy},
            UPDATED_AT = SYSDATE
        WHERE SCHEDULE_ID = #{scheduleId}
        AND MEMBER_ID = #{memberId}
        AND IS_DELETED = 'N'
    </update>

    <!-- 참석 여부 확인 -->
    <select id="existsAttendance" resultType="int">
        SELECT COUNT(*)
        FROM SCHEDULE_ATTENDANCE
        WHERE SCHEDULE_ID = #{scheduleId}
        AND MEMBER_ID = #{memberId}
        AND IS_DELETED = 'N'
    </select>

    <!-- 참석자 수 조회 -->
    <select id="countAttendees" resultType="int">
        SELECT COUNT(*)
        FROM SCHEDULE_ATTENDANCE
        WHERE SCHEDULE_ID = #{scheduleId}
        AND ATTENDANCE_STATUS = 'ATTEND'
        AND IS_DELETED = 'N'
    </select>

</mapper>