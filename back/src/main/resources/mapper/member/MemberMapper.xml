<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ggamakun.linkle.domain.member.repository.IMemberRepository">

	<!-- 이메일로 회원 조회 - 인증용 -->
    <select id="findByEmailForAuth" parameterType="String" resultType="com.ggamakun.linkle.domain.member.entity.Member">
        SELECT 
            member_id as memberId,
            file_id as fileId,
            email,
            password,
            provider,
            provider_id as providerId
        FROM Member 
        WHERE email = #{email}
        AND is_deleted = 'N'
    </select>

    <!-- 회원 ID로 프로필 조회 -->
    <select id="findById" parameterType="int" resultType="com.ggamakun.linkle.domain.member.entity.Member">
        SELECT 
            member_id as memberId,
            file_id as fileId,
            email,
            name,
            nickname,
            birth_date as birthDate,
            gender,
            sido,
            sigungu,
            description,
            interests,
            join_date as joinDate,
            provider,
            provider_id as providerId,
            email_verified as emailVerified 
        FROM Member 
        WHERE member_id = #{memberId}
        AND is_deleted = 'N'
    </select>
    
    <!-- Provider와 ProviderId로 회원 조회 (소셜 로그인용) -->
    <select id="findByProviderAndProviderId" resultType="com.ggamakun.linkle.domain.member.entity.Member">
        SELECT 
            member_id as memberId,
            email,
            name,
            nickname,
            provider,
            provider_id as providerId,
            email_verified as emailVerified
        FROM Member 
        WHERE provider = #{provider}
        AND provider_id = #{providerId}
        AND is_deleted = 'N'
    </select>
    
    <!-- 토큰으로 회원 조회 - 이메일 인증용 -->
    <select id="findByVerificationToken" parameterType="String" resultType="com.ggamakun.linkle.domain.member.entity.Member">
        SELECT 
            member_id as memberId,
            email,
            email_verified as emailVerified,
            verification_token as verificationToken,
            token_expiry_date as tokenExpiryDate
        FROM Member 
        WHERE verification_token = #{token}
        AND is_deleted = 'N'
    </select>

    <!-- 이메일 중복 확인 -->
    <select id="countByEmail" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM Member 
        WHERE email = #{email}
        AND is_deleted = 'N'
    </select>
    
    <!-- 닉네임 중복 확인 -->
    <select id="countByNickname" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM Member 
        WHERE nickname = #{nickname}
        AND is_deleted = 'N'
    </select>

    <!-- 회원 등록 -->
    <insert id="insertMember" parameterType="com.ggamakun.linkle.domain.member.entity.Member">
        <selectKey keyProperty="memberId" resultType="int" order="BEFORE">
            SELECT seq_member.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO member (
            member_id,
            email,
            password,
            name,
            nickname,
            birth_date,
            gender,
            sido,
            sigungu,
            description,
            interests,
            join_date,
            created_at,
            is_withdrawn,
            provider,
            provider_id,
            is_deleted,
            email_verified
        ) VALUES (
            #{memberId},
            #{email},
            #{password},
            #{name},
            #{nickname},
            #{birthDate},
            #{gender},
            #{sido},
            #{sigungu},
            #{description},
            #{interests},
            SYSDATE,
            SYSDATE,
            'N',
            #{provider},
            #{providerId},
            'N',
            'N'
        )
    </insert>
    
    <!-- 회원 정보 수정 -->
    <update id="updateMember" parameterType="com.ggamakun.linkle.domain.member.entity.Member">
        UPDATE member
        SET
        	<if test="fileId != null">file_id = #{fileId},</if>
        	<if test="password != null">password = #{password},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="birthDate != null">birth_date = #{birthDate},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="sido != null">sido = #{sido},</if>
            <if test="sigungu != null">sigungu = #{sigungu},</if>
            <if test="description != null">description = #{description},</if>
            <if test="interests != null">interests = #{interests},</if>
            <if test="emailVerified != null">email_verified = #{emailVerified},</if>
            <if test="verificationToken != null">verification_token = #{verificationToken},</if>
            <if test="tokenExpiryDate != null">token_expiry_date = #{tokenExpiryDate},</if>
            <if test="isDeleted != null">is_deleted = #{isDeleted},</if>
            <if test="isWithdrawn != null">is_withdrawn = #{isWithdrawn},</if>
            <if test='isWithdrawn != null and isWithdrawn.equals("Y")'>leave_date = SYSDATE,</if>
            updated_by = #{updatedBy},
            updated_at = SYSDATE
        WHERE member_id = #{memberId}
        AND is_deleted = 'N'
    </update>

</mapper>